# -*- coding: utf-8 -*-
"""Numpy_python.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1usjcNTejgcyY-tMhgp471f7_s5vTfM_a
"""

import numpy as np

consumo = np.array([
    [12.5, 13.2, 11.9, 14.0, 13.5, 15.0, 14.3],
    [10.1, 10.5, 10.0, 11.2, 11.5, 12.0, 11.8],
    [14.0, 14.2, 13.9, 15.5, 15.1, 16.0, 15.8],
    [9.0, 9.2, 8.9, 9.5, 9.8, 10.0, 9.7],
    [16.2, 16.5, 16.0, 17.1, 17.4, 18.0, 17.8],
    [11.0, 11.3, 11.1, 12.0, 12.4, 12.8, 12.5],
    [13.5, 13.8, 13.2, 14.1, 14.6, 15.0, 14.9],
    [10.8, 11.0, 10.6, 11.5, 11.8, 12.2, 12.0],
    [15.1, 15.5, 15.0, 16.0, 16.4, 17.0, 16.7],
    [8.5, 8.7, 8.4, 9.0, 9.2, 9.5, 9.3],
    ])
print(consumo.ndim)
print(consumo.shape)
print(consumo.dtype)
print(consumo[0])
print(consumo[:,2])


promedio_por_hogar = np.mean(consumo, axis=1)
promedio_por_dia = np.mean(consumo, axis=0)
total_consumo = np.sum(consumo)
print(promedio_por_hogar)
print(promedio_por_dia)
print(total_consumo)


maximos = np.max(consumo, axis=1)
minimos = np.min(consumo, axis=0)
desviacion = np.std(consumo, axis=1)
print(maximos)
print(minimos)
print(desviacion)


consumo_total_hogar = np.sum(consumo, axis=1)
hogar_mayor_consumo =np.argmax(consumo_total_hogar)
hogar_mas_eficiente = np.argmin(consumo_total_hogar)
print(consumo_total_hogar)
print(hogar_mayor_consumo)
print(hogar_mas_eficiente)


consumo_total_hogar = np.sum(consumo, axis=1)
print(f"Consumo total de cada hogar durante la semana: {consumo_total_hogar}")
altos =consumo_total_hogar > 100
consumo_mayor_100 = np.where(altos)[0]
print(f"ids de hogares con consumo mayor a 100: {consumo_mayor_100}")

consumo_normalizado = (consumo - consumo.min()) / (consumo.max() - consumo.min())
print(consumo_normalizado)

#Partes de preguntas:
#1
print (consumo[4, 4] )
#2
print(consumo[7:10, 6])
#3
print(np.mean(consumo[:, [5, 6]]))
#4
std_por_dia = np.std(consumo, axis=0)
día_max_std = np.argmax(std_por_dia)
print(f"El día con la mayor desviación estándar es el {día_max_std + 1}")
#5
total_hogares = consumo.sum(axis=1)
indices = np.argsort(total_hogares)[:3]
valores = total_hogares[índices]
print(indices)
print(valores)
#6
nconsumo = consumo[2] * 1.10
totaln = nconsumo.sum()
print(totaln)

"""Instrucciones:
Responde cada pregunta escribiendo el código necesario para obtener la respuesta.
Agrega también comentarios o respuestas escritas cuando se solicite explicación.
No borres las secciones anteriores del archivo python desarrollado para esta guía de trabajo, simplemente agrega tus respuestas al final.
Puedes auxiliarte de tu herramienta IA preferida, pero recuerda las buenas prácticas para su uso. Somos responsables de comprender el resultado.
Cuestionario.
1. ¿Cuál es el consumo del hogar 5 el viernes (día 5)? R// 17.4 kWh
2. Usando indexación, muestra el consumo de los últimos 3 hogares el domingo.
R// 12.0, 16.7, 9.3 kWh
3. Calcula el promedio de consumo los fines de semana (sábado y domingo, columnas 5 y 6). R// 13.69 kWh
4. ¿Qué día de la semana tiene la mayor desviación estándar entre hogares? Explica qué indica esto. R//sábado (columna 5)
5. Identifica los 3 hogares con menor consumo total durante la semana. Muestra sus índices y valores. R// Índices: [9, 3, 1] y Valores: [62.6, 66.1, 77.1] kWh
6. Si el hogar 3 aumenta su consumo en un 10% cada día, ¿cuál sería su nuevo consumo total semanal?
R// 114.55 kWh
"""